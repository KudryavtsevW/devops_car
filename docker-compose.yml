version: "3"

services:
  car-emulator:
    build: ./CarEmulator/CarEmulator
    restart: always
    depends_on:
      - rabbitmq
      - influxdb
      - fuel-collector
    networks:
      - dot_netw

  fuel-collector:
    build: ./FuelConsumptionControl/FuelDataCollector
    restart: always
    depends_on:
      - rabbitmq
      - influxdb
    networks:
      - dot_netw


  rabbitmq:
    build: .
    image: mqtt-rabbitmq
    environment:
      - RABBITMQ_ERLANG_COOKIE=${RABBITMQ_ERLANG_COOKIE}
      - RABBITMQ_DEFAULT_USER=${RABBITMQ_DEFAULT_USER}
      - RABBITMQ_DEFAULT_PASS=${RABBITMQ_DEFAULT_PASS}
      - RABBITMQ_DEFAULT_VHOST=${RABBITMQ_DEFAULT_VHOST}
    ports:
      - "15672:15672"
      - "5672:5672"
      - "1883:1883"
    volumes:
      - ./rabbitmq:/var/lib/rabbitmq:rw
    networks:
      - dot_netw

  influxdb:
    image: influxdb:2.1.1
    volumes:
      - ./influxdb-storage:/var/lib/influxdb2:rw
    env_file:
      - .env
    entrypoint: ["./entrypoint.sh"]
    ports:
      # The API for InfluxDB is served on port 8086
      - "8086:8086"
    networks:
      - dot_netw       

  telegraf:
    image: telegraf:1.26
    environment:
      HOSTNAME: "telegraf"
    # Telegraf requires network access to InfluxDB
    restart: always
    links:
      - influxdb
      - fuel-collector
    volumes:
      # Mount for telegraf configuration
      - ./telegraf.conf:/etc/telegraf/telegraf.conf:ro
      # Mount for Docker API access
      - /var/run/docker.sock:/var/run/docker.sock
    depends_on:
      - rabbitmq
      - influxdb
      - fuel-collector
    networks:
      - dot_netw   

  grafana:
    image: grafana/grafana-oss:8.4.3
    volumes:
      - ./grafana-volume:/vol01/Docker/monitoring
    depends_on:
      - influxdb
    ports:
      - 3000:3000
    networks:
      - dot_netw  

networks:
  dot_netw:
    driver: bridge   

# volumes:
#   grafana-storage:
#   influxdb-storage:
